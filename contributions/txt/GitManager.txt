# More on this file here: https://github.com/processing/processing/wiki/Tool-Basics
# UTF-8 supported.

# The name of your tool as you want it formatted.
name = Git Manager

# List of authors. Links can be provided using the syntax [author name](url).
authors = [Joel Moniz](http://joelmoniz.com)

# A web page for your tool, NOT a direct link to where to download it.
url = http://joelmoniz.com/git-manager

# The category of your tool, must be one (or many) of the following:
#   "3D"            "Animation"     "Compilations"      "Data"          
#   "Fabrication"   "Geometry"      "GUI"               "Hardware"      
#   "I/O"           "Language"      "Math"              "Simulation"    
#   "Sound"         "Utilities"     "Typography"        "Video & Vision"
# 
# If a value other than those listed is used, your tool will listed as "Other".
categories = ${tool.category}

# A short sentence (or fragment) to summarize the tool's function. This will be
# shown from inside the PDE when the tool is being installed. Avoid repeating
# the name of your tool here. Also, avoid saying anything redundant like
# mentioning that it's a tool. This should start with a capitalized letter, and
# end with a period.
sentence = A GUI Git Client for Processing

# Additional information suitable for the Processing website. The value of
# 'sentence' always will be prepended, so you should start by writing the
# second sentence here. If your tool only works on certain operating systems,
# mention it here.
paragraph = A tool to act as a complete and convenient interface for users of various online git repository hosting services, and to integrate the awesomeness of version control with Processing. 

# Links in the 'sentence' and 'paragraph' attributes can be inserted using the
# same syntax as for authors. 
# That is, [here is a link to Processing](http://processing.org/)


# A version number that increments once with each release. This is used to 
# compare different versions of the same tool, and check if an update is 
# available. You should think of it as a counter, counting the total number of 
# releases you've had.
version = 3  # This must be parsable as an int

# The version as the user will see it. If blank, the version attribute will be 
# used here.
prettyVersion = 0.2.2  # This is treated as a String
lastUpdated = 1443010051000

maxRevision = 0
minRevision = 0242
